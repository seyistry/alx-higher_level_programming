===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Testing basic divisions
=======================

``matrix_divided()`` a function that divides all elements of a matrix.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix_divided(matrix, 155)
	[[0.01, 0.01, 0.02], [0.03, 0.03, 0.04]]
	>>> matrix_divided([[3],[6]], 5)
	[[0.6], [1.2]]

It also works with Negative argument.

::

    >>> matrix_divided([[-14],[-13]], -5)
    [[2.8], [2.6]]
	>>> matrix_divided(matrix , 10 - 8)
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]


it works with Mixed integers and floats.

::

	>>> matrix_divided([[3.4, 6],[18, 4.46]], 1.3)
	[[2.62, 4.62], [13.85, 3.43]]

for float('inf') and float("nan")

::

	>>> matrix_divided(matrix, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
	>>> matrix_divided(matrix, float('nan'))
	[[nan, nan, nan], [nan, nan, nan]]


Handle Errors , TypeErrors
==========================

::

	>>> matrix = [[2, 3, 4], [4, 5, 6], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided(matrix, "hello")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [[2, 3, 4], [4, 5, 6, 3], [5, 6]]
	>>> matrix_divided(matrix, 13)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix = [[2, 3, "hola"], [4, "bob", 6, 3], [5, 6]]
	>>> matrix_divided(matrix, 13)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[2, 3, 3], {3, 4}, [5, 6]]
	>>> matrix_divided(matrix, 13)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = []
	>>> matrix_divided(matrix, 13)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[], [], []]
	>>> matrix_divided(matrix, 15)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test positional arguments.
==========================

::


	>>> matrix_divided(matrix, 16, 3)
	Traceback (most recent call last):
	TypeError: matrix_divided() takes 2 positional arguments but 3 were given
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'